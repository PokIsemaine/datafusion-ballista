# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: proto/brain_server.proto
# Protobuf Python Version: 5.29.0
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import runtime_version as _runtime_version
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
_runtime_version.ValidateProtobufRuntimeVersion(
    _runtime_version.Domain.PUBLIC,
    5,
    29,
    0,
    '',
    'proto/brain_server.proto'
)
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x18proto/brain_server.proto\x12\x15\x62rain_server.protobuf\"\x1c\n\x0cHelloRequest\x12\x0c\n\x04name\x18\x01 \x01(\t\"\x1d\n\nHelloReply\x12\x0f\n\x07message\x18\x01 \x01(\t\"\xeb\x12\n\rStageOperator\x12\x0e\n\x06job_id\x18\x01 \x01(\t\x12\x10\n\x08job_name\x18\x02 \x01(\t\x12\x10\n\x08stage_id\x18\x03 \x01(\x04\x12\x15\n\rcurrent_op_id\x18\x04 \x01(\x04\x12\x14\n\x0cparent_op_id\x18\x05 \x01(\x04\x12\x15\n\roperator_type\x18\x06 \x01(\t\x12\x15\n\rstat_num_rows\x18\x07 \x01(\t\x12\x1c\n\x14stat_total_byte_size\x18\x08 \x01(\t\x12\x14\n\x0c\x63olumn_stats\x18\t \x01(\t\x12\x17\n\ntopk_fetch\x18\n \x01(\x04H\x00\x88\x01\x01\x12\x11\n\tsort_expr\x18\x0b \x01(\t\x12\x1d\n\x15preserve_partitioning\x18\x0c \x01(\x08\x12\x10\n\x08\x61gg_mode\x18\r \x01(\t\x12\x0f\n\x07\x61gg_gby\x18\x0e \x01(\t\x12\x10\n\x08\x61gg_aggr\x18\x0f \x01(\t\x12\x16\n\tagg_limit\x18\x10 \x01(\x04H\x01\x88\x01\x01\x12\x1c\n\x14\x61gg_input_order_mode\x18\x11 \x01(\t\x12(\n coalesce_batch_target_batch_size\x18\x12 \x01(\x04\x12!\n\x14\x63oalesce_batch_fetch\x18\x13 \x01(\x04H\x02\x88\x01\x01\x12\x18\n\x10\x66ilter_predicate\x18\x14 \x01(\t\x12\x19\n\x11\x66ilter_projection\x18\x15 \x01(\t\x12\x0f\n\x07hj_mode\x18\x16 \x01(\t\x12\x14\n\x0chj_join_type\x18\x17 \x01(\t\x12\r\n\x05hj_on\x18\x18 \x01(\t\x12\x11\n\thj_filter\x18\x19 \x01(\t\x12\x16\n\x0ehj_projections\x18\x1a \x01(\t\x12\x15\n\rnlj_join_type\x18\x1b \x01(\t\x12\x12\n\nnlj_filter\x18\x1c \x01(\t\x12\x17\n\x0fnlj_projections\x18\x1d \x01(\t\x12\x15\n\rsmj_join_type\x18\x1e \x01(\t\x12\x0e\n\x06smj_on\x18\x1f \x01(\t\x12\x12\n\nsmj_filter\x18  \x01(\t\x12\x1a\n\x12sort_required_expr\x18! \x01(\t\x12\x10\n\x08shj_mode\x18\" \x01(\t\x12\x15\n\rshj_join_type\x18# \x01(\t\x12\x0e\n\x06shj_on\x18$ \x01(\t\x12\x12\n\nshj_filter\x18% \x01(\t\x12\x19\n\x11global_limit_skip\x18& \x01(\x04\x12\x1f\n\x12global_limit_fetch\x18\' \x01(\x04H\x03\x88\x01\x01\x12\x19\n\x11local_limit_fetch\x18( \x01(\x04\x12\x19\n\x11memory_partitions\x18) \x01(\x04\x12\x1e\n\x16memory_partition_sizes\x18* \x01(\t\x12\x1e\n\x16memory_output_ordering\x18+ \x01(\t\x12\x1a\n\x12memory_constraints\x18, \x01(\t\x12\x1e\n\x16lazy_memory_partitions\x18- \x01(\x04\x12$\n\x1clazy_memory_batch_generators\x18. \x01(\t\x12\x17\n\x0fprojection_expr\x18/ \x01(\t\x12\x1c\n\x14recursive_query_name\x18\x30 \x01(\t\x12#\n\x1brecursive_query_is_distinct\x18\x31 \x01(\x08\x12\x18\n\x10repartition_name\x18\x32 \x01(\t\x12 \n\x18repartition_partitioning\x18\x33 \x01(\t\x12$\n\x1crepartition_input_partitions\x18\x34 \x01(\x04\x12\"\n\x1arepartition_preserve_order\x18\x35 \x01(\x08\x12#\n\x16repartition_sort_exprs\x18\x36 \x01(\tH\x04\x88\x01\x01\x12#\n\x16partial_sort_tok_fetch\x18\x37 \x01(\x04H\x05\x88\x01\x01\x12\x19\n\x11partial_sort_expr\x18\x38 \x01(\t\x12)\n!partial_sort_common_prefix_length\x18\x39 \x01(\x04\x12(\n\x1bsort_preserving_merge_fetch\x18: \x01(\x04H\x06\x88\x01\x01\x12\x17\n\x0fwork_table_name\x18; \x01(\t\x12\'\n\x1fstreaming_table_partition_sizes\x18< \x01(\x04\x12)\n!streaming_table_projection_schema\x18= \x01(\t\x12\'\n\x1fstreaming_table_infinite_source\x18> \x01(\x08\x12\"\n\x15streaming_table_fetch\x18? \x01(\x04H\x07\x88\x01\x01\x12 \n\x18streaming_table_ordering\x18@ \x01(\t\x12\x1c\n\x14statistics_col_count\x18\x41 \x01(\x04\x12\x1c\n\x14statistics_row_count\x18\x42 \x01(\t\x12\x1a\n\x12\x62ounded_window_wdw\x18\x43 \x01(\t\x12\'\n\x1f\x62ounded_window_input_order_mode\x18\x44 \x01(\t\x12\x16\n\x0ewindow_agg_wdw\x18\x45 \x01(\t\x12\x1f\n\x17memory_table_partitions\x18\x46 \x01(\x04\x12\x1b\n\x13parquet_base_config\x18G \x01(\t\x12\x19\n\x11parquet_predicate\x18H \x01(\t\x12\"\n\x1aparquet_prunning_predicate\x18I \x01(\t\x12\x17\n\x0f\x63sv_base_config\x18J \x01(\t\x12\x1f\n\x17parquet_sink_file_group\x18K \x01(\t\x12!\n\x19shuffle_reader_partitions\x18L \x01(\x04\x12*\n\"shuffle_writer_output_partitioning\x18M \x01(\t\x12.\n&unresolved_shuffle_output_partitioning\x18N \x01(\tB\r\n\x0b_topk_fetchB\x0c\n\n_agg_limitB\x17\n\x15_coalesce_batch_fetchB\x15\n\x13_global_limit_fetchB\x19\n\x17_repartition_sort_exprsB\x19\n\x17_partial_sort_tok_fetchB\x1e\n\x1c_sort_preserving_merge_fetchB\x18\n\x16_streaming_table_fetch\"p\n\rScheduleStage\x12\x10\n\x08stage_id\x18\x01 \x01(\x04\x12\x14\n\x0coutput_links\x18\x02 \x03(\x04\x12\x37\n\toperators\x18\x03 \x03(\x0b\x32$.brain_server.protobuf.StageOperator\"e\n\x0bScheduleJob\x12\x0e\n\x06job_id\x18\x01 \x01(\t\x12\x10\n\x08job_name\x18\x02 \x01(\t\x12\x34\n\x06stages\x18\x03 \x03(\x0b\x32$.brain_server.protobuf.ScheduleStage\"-\n\x05VMSet\x12\x12\n\nvm_spec_id\x18\x01 \x01(\t\x12\x10\n\x08vm_count\x18\x02 \x01(\x04\"U\n\x13StageSchedulePolicy\x12\x10\n\x08stage_id\x18\x01 \x01(\x04\x12,\n\x06vm_set\x18\x02 \x01(\x0b\x32\x1c.brain_server.protobuf.VMSet\"e\n\x0eScheduleResult\x12\x0e\n\x06status\x18\x01 \x01(\t\x12\x43\n\x0fschedule_policy\x18\x02 \x03(\x0b\x32*.brain_server.protobuf.StageSchedulePolicy2\xc1\x01\n\x0b\x42rainServer\x12R\n\x08SayHello\x12#.brain_server.protobuf.HelloRequest\x1a!.brain_server.protobuf.HelloReply\x12^\n\x11RecommendSchedule\x12\".brain_server.protobuf.ScheduleJob\x1a%.brain_server.protobuf.ScheduleResultb\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'proto.brain_server_pb2', _globals)
if not _descriptor._USE_C_DESCRIPTORS:
  DESCRIPTOR._loaded_options = None
  _globals['_HELLOREQUEST']._serialized_start=51
  _globals['_HELLOREQUEST']._serialized_end=79
  _globals['_HELLOREPLY']._serialized_start=81
  _globals['_HELLOREPLY']._serialized_end=110
  _globals['_STAGEOPERATOR']._serialized_start=113
  _globals['_STAGEOPERATOR']._serialized_end=2524
  _globals['_SCHEDULESTAGE']._serialized_start=2526
  _globals['_SCHEDULESTAGE']._serialized_end=2638
  _globals['_SCHEDULEJOB']._serialized_start=2640
  _globals['_SCHEDULEJOB']._serialized_end=2741
  _globals['_VMSET']._serialized_start=2743
  _globals['_VMSET']._serialized_end=2788
  _globals['_STAGESCHEDULEPOLICY']._serialized_start=2790
  _globals['_STAGESCHEDULEPOLICY']._serialized_end=2875
  _globals['_SCHEDULERESULT']._serialized_start=2877
  _globals['_SCHEDULERESULT']._serialized_end=2978
  _globals['_BRAINSERVER']._serialized_start=2981
  _globals['_BRAINSERVER']._serialized_end=3174
# @@protoc_insertion_point(module_scope)
